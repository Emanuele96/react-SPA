{"version":3,"sources":["assets/sounds/piano/1.mp3","assets/sounds/piano/2.mp3","assets/sounds/piano/3.mp3","assets/sounds/piano/4.mp3","assets/sounds/nature/1.mp3","assets/sounds/nature/2.mp3","assets/sounds/nature/3.mp3","assets/sounds/nature/4.mp3","assets/sounds/citylife/1.mp3","assets/sounds/citylife/2.mp3","assets/sounds/citylife/3.mp3","assets/sounds/citylife/4.mp3","components/maindisplay/loading.svg","components/soundform/AudioPlayer.js","components/maindisplay/Maindisplay.js","components/choiceSelector/ChoiceSelector.js","components/ui/button/Button.js","components/sidebar/Sidebar.js","components/ui/tabchoice/Tabchoice.js","components/tabdisplay/Tabdisplay.js","components/favorite/Favorite.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","pianoSongs","piano1","piano2","piano3","piano4","natureSounds","nature1","nature2","nature3","nature4","citylifeSounds","citylife1","citylife2","citylife3","citylife4","AudioPlayer","props","soundTrack","soundCategory","className","preload","src","type","controls","loop","autoPlay","WelcomeMessage","Maindisplay","isWelcomeScreen","selectedTab","data","loading","alt","dangerouslySetInnerHTML","__html","ChoiceSelector","componentDidUpdate","state","selectedOption","select","setState","alternative1","handleChange","bind","sendCategory","e","this","target","value","categoryName","checked","onChange","name","alternative2","alternative3","React","Component","Button","id","onClick","disabled","handleDisabled","icon","text","Sidebar","handleUndo","isUndoEmpty","handleRedo","isRedoEmpty","updateSoundCategory","getCheckboxCategories","updateTextCategory","updatePictureCategory","Tabchoice","createTabChoices","choices","i","push","Tabdisplay","Favorite","getFavorite","isFavoriteSaved","handleFavorite","showHandleFavorite","App","createStartScreenData","undoArr","length","textCategory","welcomeScreenCategories","pictureCategory","handleTabClick","picture","sound","handleSession","categories","sessionStorage","setItem","JSON","stringify","redoArr","pop","previousCategories","currentCategories","previousCombination","parse","localStorage","getItem","combination","newCombination","fetchPictures","filename","toLowerCase","key","undefined","saved_resources","console","log","fetch","then","res","result","tmp_data","tmp_fetched_data","updateFetchedData","error","favoriteCombination","previous_fetched_text_category","previous_fetched_picture_category","previous_selected_tab","fetchText","Object","keys","saved_resources_copy","assign","json","title","picture_data","text_data","sendDataToVisualize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61f69de6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.993b93bb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.8b58876a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.cf9c32fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.56b65e2c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.dfd519a6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.1de7fc7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.dcd6b18a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.f4f48c37.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.fcc7e341.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.2a503fe3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.cc4260c8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.f4ac2478.mp3\";","module.exports = __webpack_public_path__ + \"static/media/loading.09cfe256.svg\";","import React from 'react';\r\n\r\nimport './AudioPlayer.css' \r\nimport piano1 from '../../assets/sounds/piano/1.mp3';\r\nimport piano2 from '../../assets/sounds/piano/2.mp3';\r\nimport piano3 from '../../assets/sounds/piano/3.mp3';\r\nimport piano4 from '../../assets/sounds/piano/4.mp3';\r\nimport nature1 from '../../assets/sounds/nature/1.mp3';\r\nimport nature2 from '../../assets/sounds/nature/2.mp3';\r\nimport nature3 from '../../assets/sounds/nature/3.mp3';\r\nimport nature4 from '../../assets/sounds/nature/4.mp3';\r\nimport citylife1 from '../../assets/sounds/citylife/1.mp3';\r\nimport citylife2 from '../../assets/sounds/citylife/2.mp3';\r\nimport citylife3 from '../../assets/sounds/citylife/3.mp3';\r\nimport citylife4 from '../../assets/sounds/citylife/4.mp3';\r\n\r\n\r\nconst pianoSongs = [piano1, piano2, piano3, piano4];\r\nconst natureSounds = [nature1, nature2, nature3, nature4];\r\nconst citylifeSounds = [citylife1, citylife2, citylife3, citylife4];\r\n\r\nconst AudioPlayer = props => {\r\n  let soundTrack;\r\n  let soundCategory = props.soundCategory;\r\n\r\n  if (soundCategory === 'Naturen') {\r\n    soundTrack = natureSounds[props.soundTrack - 1];\r\n  } else if (soundCategory === 'Piano') {\r\n    soundTrack = pianoSongs[props.soundTrack - 1];\r\n  } else if (soundCategory === 'By liv') {\r\n    soundTrack = citylifeSounds[props.soundTrack - 1];\r\n  }\r\n\r\n  return (\r\n    <div className='sound'>\r\n      <audio\r\n        className='soundPlayer'\r\n        preload='auto'\r\n        src={soundTrack}\r\n        type='audio/mpeg'\r\n        controls\r\n        loop\r\n        autoPlay\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React from 'react';\r\nimport './Maindisplay.css';\r\nimport AudioPlayer from '../soundform/AudioPlayer';\r\nimport loading from './loading.svg';\r\n\r\n//Functional component that visualized data passed down from App.\r\n//It has 3 screens: \r\n//    - WelcomeScreen : Is visualized if App is on the welcome screen\r\n//    - LoadingScreen : Is Visualizing if App is not on welcom screen but data is not ready yet\r\n//    - Data : Visualizing the data (picture, text and sound)\r\n\r\nconst Maindisplay = props => {\r\n  if (props.isWelcomeScreen)\r\n    return <WelcomeMessage selectedTab={props.selectedTab} />;\r\n  else if (props.data === null)\r\n    return (\r\n      <div>\r\n        <div className='text'>Laster inn data...</div>\r\n        <div className='loading'>\r\n          {' '}\r\n          <img src={loading} alt='' />\r\n        </div>\r\n      </div>\r\n    );\r\n  else {\r\n    return (\r\n      <div>\r\n        <div\r\n          className='title'\r\n          dangerouslySetInnerHTML={{ __html: props.data[1][0] }}\r\n        ></div>\r\n        <div\r\n          className='picture'\r\n          dangerouslySetInnerHTML={{ __html: props.data[0] }}\r\n        ></div>\r\n        <div\r\n          className='text'\r\n          dangerouslySetInnerHTML={{ __html: props.data[1][1] }}\r\n        ></div>\r\n        <AudioPlayer\r\n          soundTrack={props.selectedTab}\r\n          soundCategory={props.soundCategory}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst WelcomeMessage = props => {\r\n  return (\r\n    <div className='welcomemsg'>\r\n      <h2>Velkommen!</h2>\r\n      <p>\r\n        Vennligst velg tre kategorier per medietype i vindu til høyre og trykk\r\n        på en tab for å lage en kombinasjon.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Maindisplay;\r\n","import React from 'react';\r\nimport './ChoiceSelector.css';\r\n\r\n//Generic componet for selecting a value between 3 posible choices\r\n//Since the module is generic\r\nclass ChoiceSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: this.props.select\r\n        ? this.props.select\r\n        : this.props.alternative1\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.props.sendCategory(this.state.selectedOption);\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.state.selectedOption !== this.props.select) {\r\n      this.setState({\r\n        selectedOption: this.props.select\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange(e) {\r\n    //On change of the state of the radio buttons, it updates the state of the component and updated the parent component\r\n    this.setState({\r\n      selectedOption: e.target.value\r\n    });\r\n    this.props.sendCategory(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    //Since the module is generic, it needs information about the 3 possible choices and the category text to display.\r\n    //checked propriety is used to check the radio button that is selected. This makes it an controlled component.\r\n\r\n    return (\r\n      <div className='choice-form'>\r\n        <h3>{this.props.categoryName}</h3>\r\n        <form>\r\n          <label>\r\n            <input\r\n              type='radio'\r\n              checked={this.state.selectedOption === this.props.alternative1}\r\n              value={this.props.alternative1}\r\n              onChange={this.handleChange}\r\n              name='category'\r\n            />\r\n            {this.props.alternative1}\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              type='radio'\r\n              checked={this.state.selectedOption === this.props.alternative2}\r\n              value={this.props.alternative2}\r\n              onChange={this.handleChange}\r\n              name='category'\r\n            />\r\n            {this.props.alternative2}\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              type='radio'\r\n              checked={this.state.selectedOption === this.props.alternative3}\r\n              value={this.props.alternative3}\r\n              onChange={this.handleChange}\r\n              name='category'\r\n            />\r\n            {this.props.alternative3}\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChoiceSelector;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n//Functional component button with propriety of displaying the status by beeing enabled or disabled.\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      id={props.id}\r\n      className={'btn ' + props.className}\r\n      onClick={props.onClick}\r\n      disabled={props.handleDisabled}\r\n    >\r\n      <div className='inner-btn-container'>\r\n        {true && <i className='material-icons'>{props.icon}</i>}\r\n        {true && <span>{props.text}</span>}\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n","import React from 'react';\r\nimport ChoiceSelector from '../choiceSelector/ChoiceSelector';\r\nimport Button from '../ui/button/Button';\r\nimport './Sidebar.css';\r\n\r\n//Sidebar it´s the parent component of the 3 choiceSelector components and undo redo buttons that build the gui.\r\n//It´s a functional component and an interface between the app and the ChoiceSelector componets.\r\n//It´s main purpouse is to render the Choice Selector and pass down the props for changing state values of App from the ChoiceSelector\r\n\r\nconst Sidebar = props => {\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className='undo-redo-buttons'>\r\n        <Button\r\n          id='undo'\r\n          onClick={props.handleUndo}\r\n          handleDisabled={props.isUndoEmpty}\r\n          icon={'undo'}\r\n          text={'Angre'}\r\n        />\r\n\r\n        <Button\r\n          id='redo'\r\n          onClick={props.handleRedo}\r\n          handleDisabled={props.isRedoEmpty}\r\n          icon={'redo'}\r\n          text={'Gjenta'}\r\n        />\r\n      </div>\r\n      <h3>Kategorier</h3>\r\n      <ChoiceSelector\r\n        sendCategory={props.updateSoundCategory}\r\n        categoryName='Lyd'\r\n        alternative1='Naturen'\r\n        alternative2='Piano'\r\n        alternative3='By liv'\r\n        select={props.getCheckboxCategories && props.getCheckboxCategories[0]}\r\n      />\r\n      <ChoiceSelector\r\n        sendCategory={props.updateTextCategory}\r\n        categoryName='Tekst'\r\n        alternative1='Emosjoner'\r\n        alternative2='Farger'\r\n        alternative3='Dyr'\r\n        select={props.getCheckboxCategories && props.getCheckboxCategories[1]}\r\n      />\r\n      <ChoiceSelector\r\n        categoryName='Bilder'\r\n        alternative1='Dyr'\r\n        alternative2='Biler'\r\n        alternative3='Utenomjordisk'\r\n        sendCategory={props.updatePictureCategory}\r\n        select={props.getCheckboxCategories && props.getCheckboxCategories[2]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './Tabchoice.css';\r\n\r\nconst Tabchoice = props => {\r\n  return (\r\n    <div className='tabchoice'>\r\n      <button\r\n        className={`combination${props.selectedTab == props.id ? ' show' : ''}`}\r\n        id={`combination${props.id}`}\r\n        value={props.value}\r\n        onClick={props.onClick}\r\n      >\r\n        Kombinasjon {props.id}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabchoice;\r\n","import React from 'react';\r\nimport TabChoice from '../ui/tabchoice/Tabchoice';\r\nimport './Tabdisplay.css';\r\n\r\nconst Tabdisplay = props => {\r\n  return <div className='tabdisplay'>{createTabChoices(props)}</div>;\r\n};\r\n\r\nconst createTabChoices = props => {\r\n  let choices = [];\r\n  for (let i = 1; i <= 4; i++) {\r\n    choices.push(\r\n      <TabChoice\r\n        id={i}\r\n        onClick={props.onClick}\r\n        value={i}\r\n        selectedTab={props.selectedTab}\r\n      />\r\n    );\r\n  }\r\n\r\n  return choices;\r\n};\r\n\r\nexport default Tabdisplay;\r\n","import React from 'react';\r\nimport Button from '../ui/button/Button';\r\nimport './Favorite.css';\r\n\r\n//Functional component container for set of favourite Get and Set components\r\nfunction Favorite(props) {\r\n\r\n  const showButtons = () => {\r\n    return (\r\n      <div className='favorite-buttons'>\r\n        <Button\r\n          className='favorite-get'\r\n          text='Hent kombinasjon'\r\n          onClick={props.getFavorite}\r\n          handleDisabled={!props.isFavoriteSaved}\r\n        />\r\n        <Button\r\n          className='favorite-set'\r\n          text='Lagre kombinasjon'\r\n          onClick={props.handleFavorite}\r\n          handleDisabled={props.showHandleFavorite}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{showButtons()}</div>;\r\n}\r\n\r\nexport default Favorite;\r\n","import React from 'react';\r\nimport Maindisplay from '../maindisplay/Maindisplay';\r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport Tabdisplay from '../tabdisplay/Tabdisplay';\r\nimport Favorite from '../favorite/Favorite';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Initializing undo and redo stacks with elements from session storage, empty if none.\r\n    this.undoArr = sessionStorage.getItem('categoriesUndo')\r\n      ? JSON.parse(sessionStorage.getItem('categoriesUndo'))\r\n      : [];\r\n\r\n    this.redoArr = sessionStorage.getItem('categoriesRedo')\r\n      ? JSON.parse(sessionStorage.getItem('categoriesRedo'))\r\n      : [];\r\n\r\n    this.state = {\r\n      soundCategory: null,\r\n      textCategory: null,\r\n      pictureCategory: null,\r\n      //selected tab number, set to null if welcome screen is visualized\r\n      selectedTab: this.undoArr.length <= 1 ? null : 1,\r\n      favoriteCombination: JSON.parse(localStorage.getItem('favoriteCombination')),\r\n      saved_resources: {},\r\n      //True if a saved combination is found in local storage\r\n      isFavoriteSaved: localStorage.getItem('favoriteCombination') !== null\r\n    };\r\n    //In order to limit unecessary renders of App, a tmp array is used to store fetched data from \r\n    //asynchronics fetch functions until both are finished and then update state with tmp data.\r\n    this.tmp_fetched_data = {};\r\n    //Previous fetched values used to evaluate the need for a new fetch for data.\r\n    this.previous_fetched_text_category = null;\r\n    this.previous_fetched_picture_category = null;\r\n    this.previous_selected_tab = null;\r\n  }\r\n\r\n  //It creats a welcome screen combination data and pushes it in the undo stack\r\n  createStartScreenData = () => {\r\n    if (this.undoArr.length === 0 && this.state.textCategory !== null) {\r\n      let welcomeScreenCategories = {\r\n        soundCategory: this.state.soundCategory,\r\n        textCategory: this.state.textCategory,\r\n        pictureCategory: this.state.pictureCategory\r\n      };\r\n\r\n      this.undoArr.push(welcomeScreenCategories);\r\n    }\r\n  };\r\n  \r\n  componentDidUpdate() {\r\n    //If the component has been updated and a tab is selected, so fetch the data\r\n    if (this.state.selectedTab !== null) {\r\n      //Compare the previous categories in the undo stack with categories in state (visualizing)\r\n      //and if one of them is different, push the set of categories in the stack (= new combination to visualize)\r\n      let previousCategories = this.undoArr[this.undoArr.length - 1];\r\n      if (\r\n        previousCategories.soundCategory !== this.state.soundCategory ||\r\n        previousCategories.textCategory !== this.state.textCategory ||\r\n        previousCategories.pictureCategory !== this.state.pictureCategory\r\n      ) {\r\n        // change the sesstionStorage and update the state\r\n        this.handleSession();\r\n      }\r\n\r\n      console.log('tab selected: ' + this.state.selectedTab);\r\n      console.log('previous tab selected: ' + this.previous_selected_tab);\r\n      console.log(this.previous_selected_tab !== this.state.selectedTab);\r\n      console.log('previous text cat: ' + this.previous_fetched_text_category);\r\n      console.log('text cat: ' + this.state.textCategory);\r\n      console.log(\r\n        this.previous_fetched_text_category !== this.state.textCategory\r\n      );\r\n      console.log(\r\n        'previous pic cat: ' + this.previous_fetched_picture_category\r\n      );\r\n      console.log('pic cat: ' + this.state.pictureCategory);\r\n      console.log(\r\n        this.previous_fetched_picture_category !== this.state.pictureCategory\r\n      );\r\n      //Evaluate the need of fetching data\r\n      if (\r\n        this.previous_fetched_text_category !== this.state.textCategory ||\r\n        this.previous_fetched_picture_category !== this.state.pictureCategory ||\r\n        this.previous_selected_tab !== this.state.selectedTab\r\n      ) {\r\n        this.fetchText();\r\n        this.fetchPictures();\r\n      }\r\n    }\r\n    this.previous_selected_tab = this.state.selectedTab;\r\n  }\r\n  //Called after the complete run of both fetchText and fetchPicture. It then update the state with the new fetched data.\r\n  updateFetchedData() {\r\n    if (Object.keys(this.tmp_fetched_data).length === 2) {\r\n      let saved_resources_copy = Object.assign({}, this.state.saved_resources);\r\n      if (this.tmp_fetched_data['text'] !== null) {\r\n        saved_resources_copy[\r\n          this.tmp_fetched_data['text'][0]\r\n        ] = this.tmp_fetched_data['text'][1];\r\n      }\r\n      if (this.tmp_fetched_data['picture'] !== null) {\r\n        saved_resources_copy[\r\n          this.tmp_fetched_data['picture'][0]\r\n        ] = this.tmp_fetched_data['picture'][1];\r\n      }\r\n      console.log('updating fetched data');\r\n      delete this.tmp_fetched_data['text'];\r\n      delete this.tmp_fetched_data['picture'];\r\n      console.log(this.tmp_fetched_data);\r\n      this.previous_fetched_text_category = this.state.textCategory;\r\n      this.previous_fetched_picture_category = this.state.pictureCategory;\r\n      this.setState({\r\n        saved_resources: saved_resources_copy\r\n      });\r\n    }\r\n  }\r\n  //called at each tabclick\r\n  handleTabClick = e => {\r\n    // Updates selected tab in state if changed from previous state.\r\n    if (e.target.value !== this.state.selectedTab) {\r\n      this.setState({ selectedTab: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Props passed down to sidebar that will update app state with the selected categories\r\n  updateTextCategory = text => {\r\n    if (text !== this.state.textCategory) {\r\n      this.setState({\r\n        textCategory: text\r\n      });\r\n    }\r\n  };\r\n\r\n  updatePictureCategory = picture => {\r\n    if (picture !== this.state.pictureCategory) {\r\n      this.setState({\r\n        pictureCategory: picture\r\n      });\r\n    }\r\n  };\r\n\r\n  updateSoundCategory = sound => {\r\n    if (sound !== this.state.soundCategory)\r\n      this.setState({\r\n        soundCategory: sound,\r\n        soundTrack: 1\r\n      });\r\n  };\r\n\r\n  // save the categories chosen in the sidebar in the undo stack on change\r\n  handleSession = () => {\r\n    let categories = {\r\n      soundCategory: this.state.soundCategory,\r\n      textCategory: this.state.textCategory,\r\n      pictureCategory: this.state.pictureCategory,\r\n      selectedTab: this.state.selectedTab\r\n    };\r\n    this.undoArr.push(categories);\r\n    sessionStorage.setItem('categoriesUndo', JSON.stringify(this.undoArr));\r\n    this.redoArr = [];\r\n    sessionStorage.setItem('categoriesRedo', JSON.stringify([]));\r\n  };\r\n\r\n  handleUndo = () => {\r\n    if (this.undoArr.length > 1) {\r\n      // pushes the last element of undoArr in redoArr\r\n      this.redoArr.push(this.undoArr.pop());\r\n      let previousCategories = this.undoArr[this.undoArr.length - 1];\r\n      \r\n      // change the state of the categories. Is used for displaying checkbox value.\r\n      this.setState({\r\n        soundCategory: previousCategories.soundCategory,\r\n        textCategory: previousCategories.textCategory,\r\n        pictureCategory: previousCategories.pictureCategory,\r\n        selectedTab: this.undoArr.length === 1 ? null : this.state.selectedTab\r\n      });\r\n\r\n      sessionStorage.setItem('categoriesUndo', JSON.stringify(this.undoArr));\r\n      sessionStorage.setItem('categoriesRedo', JSON.stringify(this.redoArr));\r\n    }\r\n  };\r\n  //Called onClick of redo button. Pop the last element from redo stack and pushes to undo stack.\r\n  handleRedo = () => {\r\n    if (this.redoArr.length > 0) {\r\n      this.undoArr.push(this.redoArr.pop());\r\n\r\n      let currentCategories = this.undoArr[this.undoArr.length - 1];\r\n\r\n      // change the state pf the categories. Is used for displaying checkbox value.\r\n      this.setState({\r\n        soundCategory: currentCategories.soundCategory,\r\n        textCategory: currentCategories.textCategory,\r\n        pictureCategory: currentCategories.pictureCategory,\r\n        selectedTab: this.undoArr.length !== 1 ? 1 : this.state.selectedTab\r\n      });\r\n\r\n      sessionStorage.setItem('categoriesUndo', JSON.stringify(this.undoArr));\r\n      sessionStorage.setItem('categoriesRedo', JSON.stringify(this.redoArr));\r\n    }\r\n  };\r\n  \r\n//Save a new favourite combination if different from previous saved favourite combination\r\n  handleFavorite = () => {\r\n    let previousCombination = JSON.parse(localStorage.getItem('favoriteCombination'));\r\n    const combination = {\r\n      selectedTab: this.state.selectedTab,\r\n      soundCategory: this.state.soundCategory,\r\n      textCategory: this.state.textCategory,\r\n      pictureCategory: this.state.pictureCategory\r\n    };\r\n    if (JSON.stringify(previousCombination) !== JSON.stringify(combination)) {\r\n      localStorage.setItem('favoriteCombination', JSON.stringify(combination));\r\n      this.setState({\r\n        isFavoriteSaved: true\r\n      });\r\n    }\r\n  };\r\n//Set the app state to visualize the favourite combination if different from current visualizing combination\r\n  getFavorite = () => {\r\n    let newCombination = JSON.parse(localStorage.getItem('favoriteCombination'));\r\n\r\n    const combination = {\r\n      selectedTab: this.state.selectedTab,\r\n      soundCategory: this.state.soundCategory,\r\n      textCategory: this.state.textCategory,\r\n      pictureCategory: this.state.pictureCategory\r\n    };\r\n\r\n    if (JSON.stringify(combination) !== JSON.stringify(newCombination)) {\r\n      this.setState({\r\n        selectedTab: newCombination.selectedTab,\r\n        pictureCategory: newCombination.pictureCategory,\r\n        soundCategory: newCombination.soundCategory,\r\n        textCategory: newCombination.textCategory\r\n      });\r\n    }\r\n  };\r\n\r\n  //Fetching of text if has not been fetched already\r\n  //The logic works as intended and the behavior can be monitored in the network tool of the browser\r\n  fetchText() {\r\n    let filename =\r\n      this.state.textCategory.toLowerCase() + '_' + this.state.selectedTab;\r\n    //The id of the data in the saved resources\r\n    let key = 'text_data_' + filename; \r\n    if (this.state.saved_resources[key] === undefined) {\r\n      //If data doesn´t exist in the saved resources, fetch\r\n      console.log('Fetching text data...');\r\n      fetch(\"../prosjekt2/assets/text/\"  + filename + '.json')\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            console.log('Text Data retrieved from server');\r\n            let tmp_data = [key, [result.title, result.text]];\r\n            this.tmp_fetched_data['text'] = tmp_data;\r\n            this.updateFetchedData();\r\n          },\r\n          error => {\r\n            console.log(error, 'Error while loading textdata from server'); //catch an error and throw a fail message\r\n          }\r\n        );\r\n    } else {\r\n      console.log('Text data already fetched');\r\n      let tmp_data = null;\r\n      this.tmp_fetched_data['text'] = tmp_data;\r\n      this.updateFetchedData();\r\n    }\r\n  }\r\n  //Metod for fetching of pictures, similar behavior of fetchText()\r\n  fetchPictures = () => {\r\n    //The filename of the picture on server\r\n    let filename = this.state.pictureCategory.toLowerCase() + '_' + this.state.selectedTab;\r\n    let key = 'image_data_' + filename;\r\n    if (this.state.saved_resources[key] === undefined) {\r\n      console.log('Fetching Picture data...');\r\n      fetch(\"../prosjekt2/assets/images/\" + filename + '.svg')\r\n        .then(res => res.text())\r\n        .then(\r\n          result => {\r\n            if (result === '404: Not Found\\n') {\r\n              console.log('Picture data not found on Server');\r\n            } else {\r\n              console.log('Picture Data retrieved from server with success!');\r\n              let tmp_data = [key, result];\r\n              this.tmp_fetched_data['picture'] = tmp_data;\r\n              this.updateFetchedData();\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error, 'Error while loading picture data from server');\r\n          }\r\n        );\r\n    } else {\r\n      console.log('Picture data already fetched');\r\n      let tmp_data = null;\r\n      this.tmp_fetched_data['picture'] = tmp_data;\r\n      this.updateFetchedData();\r\n    }\r\n  };\r\n  //Props down data to be visualized in mainDisplay\r\n  sendDataToVisualize() {\r\n    if (\r\n      this.state.selectedTab === null ||\r\n      Object.keys(this.state.saved_resources).length === 0\r\n    )\r\n      return null;\r\n    let picture_data = this.state.saved_resources[\r\n      'image_data_' +\r\n        this.state.pictureCategory.toLowerCase() +\r\n        '_' +\r\n        this.state.selectedTab\r\n    ];\r\n    let text_data = this.state.saved_resources[\r\n      'text_data_' +\r\n        this.state.textCategory.toLowerCase() +\r\n        '_' +\r\n        this.state.selectedTab\r\n    ];\r\n\r\n    if (picture_data !== undefined && text_data !== undefined) {\r\n      return [picture_data, text_data];\r\n    } else return null;\r\n  }\r\n\r\n  render() {\r\n    this.createStartScreenData();\r\n    console.log('rendering...');\r\n    return (\r\n      <div className='app'>\r\n        <main>\r\n          <div className='grid-container'>\r\n            <div className='tabs-bar'>\r\n              <Tabdisplay\r\n                onClick={this.handleTabClick}\r\n                selectedTab={this.state.selectedTab}\r\n              />\r\n            </div>\r\n            <div className='maindisp'>\r\n              <Maindisplay\r\n                selectedTab={this.state.selectedTab}\r\n                soundCategory={this.state.soundCategory}\r\n                data={this.sendDataToVisualize()}\r\n                isWelcomeScreen={this.state.selectedTab === null}\r\n              />\r\n            </div>\r\n            <div className='sidebar-category'>\r\n              <Sidebar\r\n                onChange={this.handleSession}\r\n                handleUndo={this.handleUndo}\r\n                handleRedo={this.handleRedo}\r\n                isUndoEmpty={this.undoArr.length === 1}\r\n                isRedoEmpty={this.redoArr.length === 0}\r\n                updateTextCategory={this.updateTextCategory}\r\n                updatePictureCategory={this.updatePictureCategory}\r\n                updateSoundCategory={this.updateSoundCategory}\r\n                getCheckboxCategories={[\r\n                  this.state.soundCategory,\r\n                  this.state.textCategory,\r\n                  this.state.pictureCategory\r\n                ]}\r\n              />\r\n            </div>\r\n            <div className='favorite'>\r\n              <Favorite\r\n                handleFavorite={this.handleFavorite}\r\n                getFavorite={this.getFavorite}\r\n                isFavoriteSaved={this.state.isFavoriteSaved}\r\n                showHandleFavorite={this.state.selectedTab === null}\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}